//Sort an array A where each of the elements belong to the set: {0, 1, 2}

//M1--inbuilt sort
//M2-- maintain count0,count1,count2... after the traversal, update the original array
//M3 -3 pointer approach

void sortTheArray (vector<int> &A) {
    // add your logic here
	int n=A.size();
	int i=0,left=0,right=n-1;
	while(i<=right){
		if(A[i]==0){
			swap(A[i], A[left]);
			i++;
			left++;
		}
		else if(A[i]==2){
			swap(A[i], A[right]);
			right--;
		}
		else{
			i++;
		}
	}
}