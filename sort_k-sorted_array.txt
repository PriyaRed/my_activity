//sort k-sorted array
//M1--  sort---O(nlogn)
//M2---using heap of size k

vector<int> sortAlmostSorted(vector<int> &A, int k) {
    // add your logic here
	int n=A.size();
	vector<int> res;
	priority_queue<int, vector<int>, greater<int>> minheap;
	for(int i=0;i<=k;i++){
		minheap.push(A[i]);
	}
	for(int i=k+1;i<n;i++){
		res.push_back(minheap.top());
		minheap.pop();
		minheap.push(A[i]);
	}
	while(minheap.size() > 0){
		res.push_back(minheap.top());
		minheap.pop();
	}
	return res;
}