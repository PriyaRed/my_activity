//METHOD 1- inbuilt sort method -- implement sort and find---O(nlogn)

int getKthLargestElement(vector<int> list, int k) {
	int n=list.size();
	sort(list.begin(), list.end());
	return list[n-k];
}

//METHOD 2 ---using min_heap---O(nlogk)

int getKthLargestElement(vector<int> list, int k) {
	int n=list.size();
	priority_queue<int,vector<int>,greater<int>> minheap;
	for(int i=0;i<k;i++){
		minheap.push(list[i]);
	}
	for(int i=k;i<n;i++){
		if(list[i] > minheap.top()){
			minheap.pop();
			minheap.push(list[i]);
		}
	}
	return minheap.top();
}

//METHOD 3---using  max heap---O(nlogn)
int getKthLargestElement(vector<int> list, int k) {
    // add your logic here
	int n=list.size();
	priority_queue<int> maxheap;
	for(int i=0;i<n;i++){
		maxheap.push(list[i]);
	}
	for(int i=0;i<k-1;i++){
		maxheap.pop();
	}
	return maxheap.top();
}
